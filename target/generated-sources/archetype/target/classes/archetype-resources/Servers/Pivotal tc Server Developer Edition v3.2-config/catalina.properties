#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )

${symbol_pound} Licensed to the Apache Software Foundation (ASF) under one or more
${symbol_pound} contributor license agreements.  See the NOTICE file distributed with
${symbol_pound} this work for additional information regarding copyright ownership.
${symbol_pound} The ASF licenses this file to You under the Apache License, Version 2.0
${symbol_pound} (the "License"); you may not use this file except in compliance with
${symbol_pound} the License.  You may obtain a copy of the License at
${symbol_pound}
${symbol_pound}     http://www.apache.org/licenses/LICENSE-2.0
${symbol_pound}
${symbol_pound} Unless required by applicable law or agreed to in writing, software
${symbol_pound} distributed under the License is distributed on an "AS IS" BASIS,
${symbol_pound} WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
${symbol_pound} See the License for the specific language governing permissions and
${symbol_pound} limitations under the License.

${symbol_pound}
${symbol_pound} List of comma-separated packages that start with or equal this string
${symbol_pound} will cause a security exception to be thrown when
${symbol_pound} passed to checkPackageAccess unless the
${symbol_pound} corresponding RuntimePermission ("accessClassInPackage."+package) has
${symbol_pound} been granted.
package.access = ${symbol_escape}
sun.,${symbol_escape}
org.apache.catalina.,${symbol_escape}
org.apache.coyote.,${symbol_escape}
org.apache.jasper.,${symbol_escape}
org.apache.naming.resources.,${symbol_escape}
org.apache.tomcat.
${symbol_pound}
${symbol_pound} List of comma-separated packages that start with or equal this string
${symbol_pound} will cause a security exception to be thrown when
${symbol_pound} passed to checkPackageDefinition unless the
${symbol_pound} corresponding RuntimePermission ("defineClassInPackage."+package) has
${symbol_pound} been granted.
${symbol_pound}
${symbol_pound} by default, no packages are restricted for definition, and none of
${symbol_pound} the class loaders supplied with the JDK call checkPackageDefinition.
${symbol_pound}
package.definition = ${symbol_escape}
sun.,${symbol_escape}
java.,${symbol_escape}
org.apache.catalina.,${symbol_escape}
org.apache.coyote.,${symbol_escape}
org.apache.jasper.,${symbol_escape}
org.apache.naming.,${symbol_escape}
org.apache.tomcat.
${symbol_pound}
${symbol_pound} List of comma-separated paths defining the contents of the "server" 
${symbol_pound} classloader. Prefixes should be used to define what is the repository type.
${symbol_pound} Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
${symbol_pound} If left as blank, the "common" loader will be used as Catalina's "server" 
${symbol_pound} loader.
${symbol_pound} Examples:
${symbol_pound}     "foo": Add this folder as a class repository
${symbol_pound}     "foo/*.jar": Add all the JARs of the specified folder as class 
${symbol_pound}                  repositories
${symbol_pound}     "foo/bar.jar": Add bar.jar as a class repository
server.loader =
${symbol_pound}
${symbol_pound} List of comma-separated paths defining the contents of the "shared" 
${symbol_pound} classloader. Prefixes should be used to define what is the repository type.
${symbol_pound} Path may be relative to the CATALINA_BASE path or absolute. If left as blank,
${symbol_pound} the "common" loader will be used as Catalina's "shared" loader.
${symbol_pound} Examples:
${symbol_pound}     "foo": Add this folder as a class repository
${symbol_pound}     "foo/*.jar": Add all the JARs of the specified folder as class 
${symbol_pound}                  repositories
${symbol_pound}     "foo/bar.jar": Add bar.jar as a class repository 
${symbol_pound} Please note that for single jars, e.g. bar.jar, you need the URL form
${symbol_pound} starting with file:.
shared.loader =
${symbol_pound}
${symbol_pound} String cache configuration.
tomcat.util.buf.StringCache.byte.enabled = true
${symbol_pound}tomcat.util.buf.StringCache.char.enabled=true
${symbol_pound}tomcat.util.buf.StringCache.trainThreshold=500000
${symbol_pound}tomcat.util.buf.StringCache.cacheSize=5000


${symbol_pound}If this property is set to true, the startup phase will
${symbol_pound}abort if there is an error during initialization
org.apache.catalina.startup.EXIT_ON_INIT_FAILURE = true
org.apache.tomcat.util.digester.PROPERTY_SOURCE = com.springsource.tcserver.security.PropertyDecoder
com.springsource.tcserver.security.PropertyDecoder.passphrase = springsource
${symbol_pound}
${symbol_pound}
${symbol_pound} List of comma-separated paths defining the contents of the "common" 
${symbol_pound} classloader. Prefixes should be used to define what is the repository type.
${symbol_pound} Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
${symbol_pound} If left as blank,the JVM system loader will be used as Catalina's "common" 
${symbol_pound} loader.
${symbol_pound} Examples:
${symbol_pound}     "foo": Add this folder as a class repository
${symbol_pound}     "foo/*.jar": Add all the JARs of the specified folder as class 
${symbol_pound}                  repositories
${symbol_pound}     "foo/bar.jar": Add bar.jar as a class repository
common.loader = ${symbol_escape}
${symbol_escape}"${symbol_dollar}{catalina.base}/lib${symbol_escape}",${symbol_escape}
${symbol_escape}"${symbol_dollar}{catalina.base}/lib/*.jar${symbol_escape}",${symbol_escape}
${symbol_escape}"${symbol_dollar}{catalina.home}/lib${symbol_escape}",${symbol_escape}
${symbol_escape}"${symbol_dollar}{catalina.home}/lib/*.jar${symbol_escape}"
${symbol_pound} List of JAR files that should not be scanned using the JarScanner
${symbol_pound} functionality. This is typically used to scan JARs for configuration
${symbol_pound} information. JARs that do not contain such information may be excluded from
${symbol_pound} the scan to speed up the scanning process. This is the default list. JARs on
${symbol_pound} this list are excluded from all scans. Scan specific lists (to exclude JARs
${symbol_pound} from individual scans) follow this. The list must be a comma separated list of
${symbol_pound} JAR file names.
${symbol_pound} The JARs listed below include:
${symbol_pound} - Tomcat Bootstrap JARs
${symbol_pound} - Tomcat API JARs
${symbol_pound} - Catalina JARs
${symbol_pound} - Jasper JARs
${symbol_pound} - Tomcat JARs
${symbol_pound} - Common non-Tomcat JARs
tomcat.util.scan.StandardJarScanFilter.jarsToSkip = ${symbol_escape}
annotations-api.jar,${symbol_escape}
ant.jar,${symbol_escape}
ant-junit*.jar,${symbol_escape}
ant-launcher.jar,${symbol_escape}
antlr-*.jar,${symbol_escape}
aopalliance-*.jar,${symbol_escape}
asm-*.jar,${symbol_escape}
aspectj*.jar,${symbol_escape}
bootstrap.jar,${symbol_escape}
catalina.jar,${symbol_escape}
catalina-ant.jar,${symbol_escape}
catalina-jmx-remote.jar,${symbol_escape}
catalina-ha.jar,${symbol_escape}
catalina-storeconfig.jar,${symbol_escape}
catalina-tribes.jar,${symbol_escape}
catalina-ws.jar,${symbol_escape}
cglib-*.jar,${symbol_escape}
cobertura-*.jar,${symbol_escape}
com.springsource.org.apache.tomcat.jdbc.jar,${symbol_escape}
commons-beanutils*.jar,${symbol_escape}
commons-codec*.jar,${symbol_escape}
commons-collections*.jar,${symbol_escape}
commons-daemon.jar,${symbol_escape}
commons-dbcp*.jar,${symbol_escape}
commons-digester*.jar,${symbol_escape}
commons-fileupload*.jar,${symbol_escape}
commons-httpclient*.jar,${symbol_escape}
commons-io*.jar,${symbol_escape}
commons-lang*.jar,${symbol_escape}
commons-logging*.jar,${symbol_escape}
commons-math*.jar,${symbol_escape}
commons-pool*.jar,${symbol_escape}
dom4j-*.jar,${symbol_escape}
ecj-*.jar,${symbol_escape}
ehcache-core-*.jar,${symbol_escape}
el-api.jar,${symbol_escape}
freemarker-*.jar,${symbol_escape}
gemfire-*.jar,${symbol_escape}
geronimo-spec-jaxrpc*.jar,${symbol_escape}
groovy-all-*.jar,${symbol_escape}
h2*.jar,${symbol_escape}
hibernate*.jar,${symbol_escape}
httpclient*.jar,${symbol_escape}
icu4j-*.jar,${symbol_escape}
insight-*.jar,${symbol_escape}
jackson-*.jar,${symbol_escape}
jasper.jar,${symbol_escape}
jasper-el.jar,${symbol_escape}
javassist-*.jar,${symbol_escape}
jaxen-*.jar,${symbol_escape}
jcommon-*.jar,${symbol_escape}
jdom-*.jar,${symbol_escape}
jetty-*.jar,${symbol_escape}
jfreechart-*.jar,${symbol_escape}
jline-*.jar,${symbol_escape}
jmx.jar,${symbol_escape}
jmx-tools.jar,${symbol_escape}
jsp-api.jar,${symbol_escape}
jstl.jar,${symbol_escape}
jta*.jar,${symbol_escape}
junit.jar,${symbol_escape}
junit-*.jar,${symbol_escape}
liquibase-core-*.jar,${symbol_escape}
log4j*.jar,${symbol_escape}
mail*.jar,${symbol_escape}
oro-*.jar,${symbol_escape}
servlet-api.jar,${symbol_escape}
slf4j*.jar,${symbol_escape}
spring-aop-*.jar,${symbol_escape}
spring-asm-*.jar,${symbol_escape}
spring-aspects-*.jar,${symbol_escape}
spring-beans-*.jar,${symbol_escape}
spring-context-*.jar,${symbol_escape}
spring-context-support-*.jar,${symbol_escape}
spring-core-*.jar,${symbol_escape}
spring-expression-*.jar,${symbol_escape}
spring-gemfire-*.jar,${symbol_escape}
spring-instrument-tomcat-*.jar,${symbol_escape}
spring-jdbc-*.jar,${symbol_escape}
spring-js-*.jar,${symbol_escape}
spring-orm-*.jar,${symbol_escape}
spring-security-core-*.jar,${symbol_escape}
spring-security-web-*.jar,${symbol_escape}
spring-tx-*.jar,${symbol_escape}
stax-*.jar,${symbol_escape}
tagsoup-*.jar,${symbol_escape}
tcServer.jar,${symbol_escape}
threaddumpwrapper.jar,${symbol_escape}
tiles-api-*.jar,${symbol_escape}
tiles-core-*.jar,${symbol_escape}
tiles-servlet-*.jar,${symbol_escape}
tomcat-api.jar,${symbol_escape}
tomcat-coyote.jar,${symbol_escape}
tomcat-dbcp.jar,${symbol_escape}
tomcat-i18n-en.jar,${symbol_escape}
tomcat-i18n-es.jar,${symbol_escape}
tomcat-i18n-fr.jar,${symbol_escape}
tomcat-i18n-ja.jar,${symbol_escape}
tomcat-jdbc.jar,${symbol_escape}
tomcat-jni.jar,${symbol_escape}
tomcat-juli.jar,${symbol_escape}
tomcat-juli-adapters.jar,${symbol_escape}
tomcat-spdy.jar,${symbol_escape}
tomcat-util.jar,${symbol_escape}
tomcat-util-scan.jar,${symbol_escape}
tools.jar,${symbol_escape}
websocket-api.jar,${symbol_escape}
wrapper.jar,${symbol_escape}
wsdl4j*.jar,${symbol_escape}
xercesImpl.jar,${symbol_escape}
xml-apis.jar,${symbol_escape}
xmlParserAPIs.jar,${symbol_escape}
xom-*.jar,${symbol_escape}
xpp3_min-*.jar,${symbol_escape}
xstream-*.jar
${symbol_pound} Default list of JAR files that should be scanned that overrides the default
${symbol_pound} jarsToSkip list above. This is typically used to include a specific JAR that
${symbol_pound} has been excluded by a broad file name pattern in the jarsToSkip list.
${symbol_pound} The list of JARs to scan may be over-ridden at a Context level for individual
${symbol_pound} scan types by configuring a JarScanner with a nested JarScanFilter.
tomcat.util.scan.StandardJarScanFilter.jarsToScan = ${symbol_escape}
log4j-core*.jar,${symbol_escape}
log4j-taglib*.jar
${symbol_pound} Additional JARs (over and above the default JARs listed above) to skip when
${symbol_pound} scanning for Servlet 3.0 pluggability features. These features include web
${symbol_pound} fragments, annotations, SCIs and classes that match @HandlesTypes. The list
${symbol_pound} must be a comma separated list of JAR file names.
org.apache.catalina.startup.ContextConfig.jarsToSkip =
${symbol_pound} Additional JARs (over and above the default JARs listed above) to skip when
${symbol_pound} scanning for TLDs. The list must be a comma separated list of JAR file names.
org.apache.catalina.startup.TldConfig.jarsToSkip =
base.shutdown.port=-1
base.jmx.port=6969
nio.http.port=8080
nio.https.port=8443
